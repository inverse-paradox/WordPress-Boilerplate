/* =============================================================================
   2-COLOR LINEAR GRADIENT
   Can take actual color and percentage values
   (e.g. hex codes, rgba, variables, color functions)
   Uses ms filter in IE9 (somewhat buggy, will have square corners)
   linear-gradient(to bottom, #ffffff, 0%, darken(#ffffff, 20%), 100%)
============================================================================= */
@mixin linear-gradient($direction, $color1, $offset1, $color2, $offset2) {
    $angle_webkit: 'left top, left bottom';
    $angle_old: 'top';
    @if $direction == 'to right' {
        $angle_webkit: 'left top, right top';
        $angle_old: 'left';
    }
    background: $color1;
    background-image:    -moz-linear-gradient(#{$angle_old}, #{$color1} #{$offset1}, #{$color2} #{$offset2});
    background-image:        -webkit-gradient(linear, #{$angle_webkit}, color-stop(#{$offset1}, #{$color1}), color-stop(#{$offset2}, #{$color2}));
    background-image: -webkit-linear-gradient(#{$angle_old}, #{$color1} #{$offset1}, #{$color2} #{$offset2});
    background-image:      -o-linear-gradient(#{$angle_old}, #{$color1} #{$offset1}, #{$color2} #{$offset2});
    background-image:     -ms-linear-gradient(#{$angle_old}, #{$color1} #{$offset1}, #{$color2} #{$offset2});
    background-image:         linear-gradient(#{$direction}, #{$color1} #{$offset1}, #{$color2} #{$offset2});
    .lte-ie9 & {
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color1}', endColorstr='#{$color2}', GradientType=0);
    }
}